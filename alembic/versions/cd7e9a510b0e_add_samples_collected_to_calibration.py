"""Add samples_collected to calibration

Revision ID: cd7e9a510b0e
Revises: 7653dd0f4acf
Create Date: 2025-07-05 18:08:41.724012

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'cd7e9a510b0e'
down_revision: Union[str, Sequence[str], None] = '7653dd0f4acf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_logs_log_id'), table_name='logs')
    op.drop_table('logs')
    op.add_column('calibrations', sa.Column('body_type', sa.String(length=50), nullable=True))
    op.add_column('calibrations', sa.Column('samples_collected', sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('calibrations', 'samples_collected')
    op.drop_column('calibrations', 'body_type')
    op.create_table('logs',
    sa.Column('log_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('timestamp', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('level', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('message', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('image_path', sa.VARCHAR(length=512), autoincrement=False, nullable=True),
    sa.Column('body_type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], name=op.f('logs_user_id_fkey')),
    sa.PrimaryKeyConstraint('log_id', name=op.f('logs_pkey'))
    )
    op.create_index(op.f('ix_logs_log_id'), 'logs', ['log_id'], unique=False)
    # ### end Alembic commands ###
